/** \mainpage Driver Overview
  *
  * \section section_drv_info Driver Information
  * This Sensor Controller Interface driver has been generated by the Texas Instruments Sensor Controller
  * Studio tool:
  * - <b>Project name</b>:     ReedSwitch
  * - <b>Project file</b>:     C:/Users/a0754799/Documents/Texas Instruments/Sensor Controller Studio/examples/ReedSwitch/Reed_Switch/Reed_Switch.scp
  * - <b>Code prefix</b>:      -
  * - <b>Operating system</b>: TI-RTOS
  * - <b>Tool version</b>:     1.1.0.38192
  * - <b>Target chip</b>:      CC2650, revision -, package QFN48 7x7 RGZ
  * - <b>Created</b>:          2015-11-12 15:28:53.897
  * - <b>Computer</b>:         LTA0754799
  * - <b>User</b>:             a0754799
  *
  * Do not edit the generated source code files other than temporarily for debug purposes. Any
  * modifications will be overwritten by the Sensor Controller Studio when generating new output.
  *
  * \section section_drv_modules Driver Modules
  * The driver is divided into three modules:
  * - \ref module_scif_generic_interface, providing the API for:
  *     - Initializing and uninitializing the driver
  *     - Task control (for starting, stopping and executing Sensor Controller tasks)
  *     - Task data exchange (for producing input data to and consume output data from Sensor Controller
  *       tasks)
  * - \ref module_scif_driver_setup, containing:
  *     - The AUX RAM image (i.e. Sensor Controller code and data)
  *     - I/O mapping information
  *     - Task data structure information
  *     - Driver setup data, to be used in the driver initialization
  *     - Project-specific functionality
  * - \ref module_scif_osal, for flexible OS support:
  *     - Interfaces with the selected operating system
  *
  * It is possible to use output from multiple Sensor Controller Studio projects in one application. Only
  * one driver setup may be active at a time, but it is possible to switch between these setups. When
  * using this option, there is one instance of the \ref module_scif_generic_interface and
  * \ref module_scif_osal modules, and multiple instances of the \ref module_scif_driver_setup module.
  * This requires that:
  * - The outputs must be generated using the same version of Sensor Controller Studio
  * - The outputs must use the same operating system
  * - The outputs must use different source code prefixes (inserted into all globals of the
  *   \ref module_scif_driver_setup)
  *
  *
  * \section section_project_info Project Description
  * No description entered
  *
  *
  * \subsection section_io_mapping I/O Mapping
  * Task I/O functions are mapped to the following pins:
  * - ReedSwitch:
  *     - <b>I: Digital Input 0</b>: DIO1
  *     - <b>I: Digital Input 1</b>: DIO23
  *
  *
  * \section section_task_info Task Description(s)
  * This driver supports the following task(s):
  *
  *
  * \subsection section_task_desc_reed_switch ReedSwitch
  * No description entered
  *
  */




/** \addtogroup module_scif_driver_setup Driver Setup
  *
  * \section section_driver_setup_overview Overview
  *
  * This driver setup instance has been generated for:
  * - <b>Project name</b>:     ReedSwitch
  * - <b>Code prefix</b>:      -
  *
  * The driver setup module contains the generated output from the Sensor Controller Studio project:
  * - Location of task control and scheduling data structures in AUX RAM
  * - The AUX RAM image, and the size the image
  * - Task data structure information (location, size and buffer count)
  * - I/O pin mapping translation table
  * - Task resource initialization and uninitialization functions
  *
  * @{
  */
#ifndef SCIF_H
#define SCIF_H

#include <stdint.h>
#include <stdbool.h>
#include "scif_framework.h"
#include "scif_osal_tirtos.h"


/// Number of tasks implemented by this driver
#define SCIF_TASK_COUNT 1

/// ReedSwitch: Task ID
#define SCIF_REED_SWITCH_TASK_ID 0


/// ReedSwitch: 
#define SCIF_REED_SWITCH_LUT 8
/// ReedSwitch: 
#define SCIF_REED_SWITCH_SENSOR1INDEX 7
/// ReedSwitch: 
#define SCIF_REED_SWITCH_SENSOR2INDEX 14
/// ReedSwitch I/O mapping: Digital Input
#define SCIF_REED_SWITCH_DIO_IDIGITAL_INPUT { 1, 23 }


// All shared data structures in AUX RAM need to be packed
#pragma pack(push, 2)


/// ReedSwitch: Task configuration structure
typedef struct {
    uint16_t pAuxioIDigitalInput[2]; ///< I/O mapping: Digital Input
} SCIF_REED_SWITCH_CFG_T;


/// ReedSwitch: Task output data structure
typedef struct {
    uint16_t counter;     ///< Incremented each time the driver is alerted
    uint16_t downCounter; ///< 
    uint16_t effCounter;  ///< 
    uint16_t upCounter;   ///< 
} SCIF_REED_SWITCH_OUTPUT_T;


/// ReedSwitch: Task state structure
typedef struct {
    uint16_t counter;           ///< Incremented once per task execution
    uint16_t downCounter;       ///< 
    uint16_t effCounter;        ///< 
    uint16_t errorLUT[8];       ///< 
    uint16_t minusOneLUT[8];    ///< 
    uint16_t nxtEdgeTrigger[8]; ///< 
    uint16_t nxtTrigger;        ///< 
    uint16_t plusOneLUT[8];     ///< 
    uint16_t upCounter;         ///< 
} SCIF_REED_SWITCH_STATE_T;


/// Sensor Controller task data (configuration, input buffer(s), output buffer(s) and internal state)
typedef struct {
    struct {
        SCIF_REED_SWITCH_CFG_T cfg;
        SCIF_REED_SWITCH_OUTPUT_T output;
        SCIF_REED_SWITCH_STATE_T state;
    } reedSwitch;
} SCIF_TASK_DATA_T;

/// Sensor Controller task generic control (located in AUX RAM)
#define scifTaskData    (*((volatile SCIF_TASK_DATA_T*) 0x400E00E6))


// Initialized internal driver data, to be used in the call to \ref scifInit()
extern const SCIF_DATA_T scifDriverSetup;


// Restore previous struct packing setting
#pragma pack(pop)


// RTC-based tick generation control
void scifStartRtcTicks(uint32_t tickStart, uint32_t tickPeriod);
void scifStartRtcTicksNow(uint32_t tickPeriod);
void scifStopRtcTicks(void);


#endif
//@}
